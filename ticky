#!/bin/bash

ticky_main() {
    local command="${1:?"no command
$(usage)"}"
    TICKY_DIR=~/.ticky
    case "$1" in
    start) ticky_start;;
    display) ticky_remaining;;
    squash) ticky_squash;;
    *) usage ;;
    esac
}

usage() {
    local command="${BASH_SOURCE[0]}"
    echo "\
Usage:
    $command start
    $command display
    $command squash
"
}

ticky_remaining() {
    local end="$(ticky_read_current_timer_end)"
    local now="$(ticky_now)"
    ticky_print_remaining "$end" "$now"
}

ticky_print_remaining() {
    local end="$1"
    local now="$2"

    if [[ "$end" == "" ]]; then
        ticky_coffee
    else
        local remaining="$(ticky_seconds_till_end "$now" "$end")"
        (( remaining >= 0 )) || ticky_coffee
        ticky_print_interval "$(ticky_absolute "$remaining")"
    fi
}

ticky_absolute() {
    local value="$1"
    if (( value < 0 )); then
        print "$((0-value))"
    else
        print "$value"
    fi
}

print() {
    printf "%s" "$1"
}

ticky_print_interval() {
    local seconds="$1"
    local mins="$((seconds / 60))"
    local secs="$((seconds % 60))"
    printf "%02d:%02d" "$mins" "$secs"
}


ticky_seconds_till_end()
{
    local now="$1"
    local end="$2"
    local now_in_seconds="$(ticky_date_to_seconds "$now")"
    local end_in_seconds="$(ticky_date_to_seconds "$end")"

    echo "$((end_in_seconds - now_in_seconds))"
}

ticky_start() {
    local start="$(ticky_now)"
    local duration="$((25*60))" 
    local end="$(ticky_date_add_duration "$start" "$duration")"
    ticky_save_start "$start" "$duration" "$end"
}

ticky_date_add_duration() {
    local start="$1"
    local duration="$2"

    local start_in_seconds="$(ticky_date_to_seconds "$start")"
    local end_in_seconds="$((start_in_seconds+duration))"

    ticky_date_from_seconds "$end_in_seconds"
}

ticky_save_start() {
    local start="$1"
    local duration="$2"
    local end="$3"

    local timebox="$TICKY_DIR/$start"

    mkdir -p "$timebox"
    echo "$start"    >| "$timebox/start"
    echo "$duration" >| "$timebox/duration"
    echo "$end"      >| "$timebox/end"

    link_forced "$timebox" "$(dirname "$timebox")/last"
}

link_forced() {
    local src="$1"
    local dst="$2"

    rm -f "$dst"
    ln -sf "$src" "$dst"
}

ticky_read_current_timer_end() {
    cat 2>/dev/null < "$TICKY_DIR/last/end"
}

ticky_squash() {
    rm -f "$TICKY_DIR/last"
}

ticky_date_from_seconds() {
    date -r "$1" +%Y-%m-%dT%T%z
}

ticky_date_to_seconds() {
    date -jf %Y-%m-%dT%T%z "$1" +%s
}

ticky_now() {
    echo ${TICKY_NOW:-$(date -u +%Y-%m-%dT%T%z)}
}

ticky_tests_failure() {
    echo "FAIL"
    exit 1
}

ticky_run_test() {
    trap ticky_tests_failure ERR
    ticky_test_display
    ticky_test_ticky_start
}

ticky_test_ticky_start() {
    rm -Rf test_ticky_dir
    TZ=UTC TICKY_NOW='1970-01-01T09:00:00+0000' TICKY_DIR=test_ticky_dir ticky_start
    diff 'test_ticky_dir/1970-01-01T09:00:00+0000/duration' <(echo '1500')
    diff 'test_ticky_dir/1970-01-01T09:00:00+0000/end'      <(echo '1970-01-01T09:25:00+0000')
}

ticky_test_display() {
    ticky_assert_equal "25:00" "$(ticky_print_remaining '2015-03-19T09:25:00+0100' '2015-03-19T09:00:00+0100')"
    ticky_assert_equal "10:00" "$(ticky_print_remaining '2015-03-19T09:25:00+0100' '2015-03-19T09:15:00+0100')"
    ticky_assert_equal "00:00" "$(ticky_print_remaining '2015-03-19T09:25:00+0100' '2015-03-19T09:25:00+0100')"
    ticky_assert_equal "$(ticky_coffee)00:01" "$(ticky_print_remaining '2015-03-19T09:25:00+0100' '2015-03-19T09:25:01+0100')"
    ticky_assert_equal "$(ticky_coffee)" "$(ticky_print_remaining '' '2015-03-19T09:00:00+0100')"
}

ticky_coffee() {
    printf '!!! '
}

ticky_assert_equal() {
    local expected="$1"
    local actual="$2"
    diff -u <(echo "$expected") <(echo "$actual")
}

if [[ "--test" == "$1" ]]; then
    ticky_run_test
elif [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    ticky_main "$@"
fi

